trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: TerraformValidateJob
  jobs:
  - job: TerraformValidateJob
    continueOnError: false
    steps:
    - task: DownloadSecureFile@1
      displayName: Download Secure File
      name: publickey
      inputs:
        secureFile: 'azure_rsa.pub'
    - task: TerraformCLI@0
      displayName: Terraform Init
      inputs:
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/kubernetes'
        commandOptions: '-var ssh_public_key=$(ssh_public_key.secureFilePath)'
        backendType: 'azurerm'
        backendServiceArm: 'TechchallengeApp-Az'
        ensureBackend: true
        backendAzureRmResourceGroupName: 'techchallengestrRG'
        backendAzureRmResourceGroupLocation: 'Australia East'
        backendAzureRmStorageAccountName: 'techchallengestorageacc'
        backendAzureRmContainerName: 'techchallengestoragecontainer'
        backendAzureRmKey: 'techchallengeapp.tfstate'
        allowTelemetryCollection: false
    - task: TerraformCLI@0
      displayName: Terraform Validate
      inputs:
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/kubernetes'
        allowTelemetryCollection: false    
    - task: TerraformCLI@0
      displayName: Terraform Plan
      inputs:
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/kubernetes'
        environmentServiceName: 'TechchallengeApp-Az'
        runAzLogin: true
        commandOptions: '-var ssh_public_key=$(ssh_public_key.secureFilePath)'
        allowTelemetryCollection: false
    - task: TerraformCLI@0
      displayName: Terraform Apply
      inputs:
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/kubernetes'
        environmentServiceName: 'TechchallengeApp-Az'
        runAzLogin: true
        commandOptions: '-var ssh_public_key=$(ssh_public_key.secureFilePath)'
        allowTelemetryCollection: false

    
   


